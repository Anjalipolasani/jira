{"ast":null,"code":"var _jsxFileName = \"/Users/karthikbalaji/Documents/Anjali/SCM/Frontend/src/UpdateDefect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\n/**\n * Component to update defect details.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateDefect = () => {\n  _s();\n  // State to manage the defect ID\n  const [id, setId] = useState('');\n  // State to manage the form fields\n  const [form, setForm] = useState({\n    assignedTo: '',\n    status: '',\n    severity: '',\n    priority: '',\n    prLink: '',\n    estFixDate: '',\n    buildNo: '',\n    fixedBuildNo: ''\n  });\n  const [message, setMessage] = useState('');\n  const [inputType, setInputType] = useState('text');\n\n  /**\n  * Handle changes to the input fields.\n  */\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value\n    }));\n  };\n\n  /**\n  * Handle the update action. This will send a PUT request to the server.\n  */\n  const handleUpdate = async () => {\n    if (!id.trim()) {\n      setMessage('Please enter a Defect ID.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/SCM/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(form)\n      });\n\n      // Log the entire response to see what's happening\n      console.log('Server Response: ', response);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Try to parse the response as JSON\n      let data;\n      try {\n        data = await response.json();\n      } catch (err) {\n        console.error('Error parsing response as JSON:', err);\n        throw new Error('Invalid JSON in response');\n      }\n\n      // Log the parsed response data\n      console.log('Response Data:', data);\n      setMessage(`Defect with ID ${id} updated successfully.`);\n    } catch (error) {\n      console.error('Failed to update defect:', error);\n      setMessage('Error updating defect. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Defect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => setId(e.target.value),\n      placeholder: \"Enter Defect ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"assignedTo\",\n      value: form.assignedTo,\n      onChange: handleChange,\n      placeholder: \"Assigned To\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"status\",\n      value: form.status,\n      onChange: handleChange,\n      placeholder: \"Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"severity\",\n      value: form.severity,\n      onChange: handleChange,\n      placeholder: \"Severity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"priority\",\n      value: form.priority,\n      onChange: handleChange,\n      placeholder: \"Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"prLink\",\n      value: form.prLink,\n      onChange: handleChange,\n      placeholder: \"PR Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: inputType,\n      onFocus: () => setInputType('date'),\n      onBlur: e => {\n        if (!e.target.value) {\n          setInputType('text');\n        }\n      },\n      placeholder: inputType === 'text' ? 'Estimated Fix Date' : undefined,\n      name: \"estFixDate\",\n      value: form.estFixDate,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"buildNo\",\n      value: form.buildNo,\n      onChange: handleChange,\n      placeholder: \"Build No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"fixedBuildNo\",\n      value: form.fixedBuildNo,\n      onChange: handleChange,\n      placeholder: \"Fixed Build No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Update Defect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateDefect, \"kHENewfmqsWXXTZB7NMGKatHhe8=\");\n_c = UpdateDefect;\nexport default UpdateDefect;\nvar _c;\n$RefreshReg$(_c, \"UpdateDefect\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdateDefect","_s","id","setId","form","setForm","assignedTo","status","severity","priority","prLink","estFixDate","buildNo","fixedBuildNo","message","setMessage","inputType","setInputType","handleChange","e","name","value","target","prevForm","handleUpdate","trim","response","fetch","method","headers","body","JSON","stringify","console","log","ok","Error","data","json","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onFocus","onBlur","undefined","required","onClick","_c","$RefreshReg$"],"sources":["/Users/karthikbalaji/Documents/Anjali/SCM/Frontend/src/UpdateDefect.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; \n\n/**\n * Component to update defect details.\n */\nconst UpdateDefect = () => {\n  // State to manage the defect ID\n  const [id, setId] = useState('');\n    // State to manage the form fields\n  const [form, setForm] = useState({\n    assignedTo: '',\n    status: '',\n    severity: '',\n    priority: '',\n    prLink: '',\n    estFixDate: '',\n    buildNo: '',\n    fixedBuildNo: '',\n  });\n  const [message, setMessage] = useState('');\n  const [inputType, setInputType] = useState('text'); \n\n   /**\n   * Handle changes to the input fields.\n   */\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setForm((prevForm) => ({\n      ...prevForm,\n      [name]: value,\n    }));\n  };\n\n   /**\n   * Handle the update action. This will send a PUT request to the server.\n   */\n  const handleUpdate = async () => {\n    if (!id.trim()) {\n      setMessage('Please enter a Defect ID.');\n      return;\n    }\n  \n    try {\n      const response = await fetch(`http://localhost:8080/SCM/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(form),\n      });\n  \n      // Log the entire response to see what's happening\n      console.log('Server Response: ', response);\n  \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n  \n      // Try to parse the response as JSON\n      let data;\n      try {\n        data = await response.json();\n      } catch (err) {\n        console.error('Error parsing response as JSON:', err);\n        throw new Error('Invalid JSON in response');\n      }\n  \n      // Log the parsed response data\n      console.log('Response Data:', data);\n  \n      setMessage(`Defect with ID ${id} updated successfully.`);\n    } catch (error) {\n      console.error('Failed to update defect:', error);\n      setMessage('Error updating defect. Please try again.');\n    }\n  };\n  \n\n  return (\n    <div>\n      <h2>Update Defect</h2>\n      {/* Input fields for defect details */}\n      <input\n        type=\"text\"\n        value={id}\n        onChange={(e) => setId(e.target.value)}\n        placeholder=\"Enter Defect ID\"\n      />\n      <input\n        type=\"text\"\n        name=\"assignedTo\"\n        value={form.assignedTo}\n        onChange={handleChange}\n        placeholder=\"Assigned To\"\n      />\n      <input\n        type=\"text\"\n        name=\"status\"\n        value={form.status}\n        onChange={handleChange}\n        placeholder=\"Status\"\n      />\n      <input\n        type=\"text\"\n        name=\"severity\"\n        value={form.severity}\n        onChange={handleChange}\n        placeholder=\"Severity\"\n      />\n      <input\n        type=\"text\"\n        name=\"priority\"\n        value={form.priority}\n        onChange={handleChange}\n        placeholder=\"Priority\"\n      />\n      <input\n        type=\"text\"\n        name=\"prLink\"\n        value={form.prLink}\n        onChange={handleChange}\n        placeholder=\"PR Link\"\n      />\n      <input\n              type={inputType}\n              onFocus={() => setInputType('date')}\n              onBlur={(e) => {\n                if (!e.target.value) {\n                  setInputType('text');\n                }\n              }}\n              placeholder={inputType === 'text' ? 'Estimated Fix Date' : undefined}\n              name=\"estFixDate\"\n              value={form.estFixDate}\n              onChange={handleChange}\n              required\n            />\n      <input\n        type=\"text\"\n        name=\"buildNo\"\n        value={form.buildNo}\n        onChange={handleChange}\n        placeholder=\"Build No\"\n      />\n      <input\n        type=\"text\"\n        name=\"fixedBuildNo\"\n        value={form.fixedBuildNo}\n        onChange={handleChange}\n        placeholder=\"Fixed Build No\"\n      />\n      {/* Button to trigger the update action */}\n      <button onClick={handleUpdate}>Update Defect</button>\n      {/* Display the message */}\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default UpdateDefect;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}