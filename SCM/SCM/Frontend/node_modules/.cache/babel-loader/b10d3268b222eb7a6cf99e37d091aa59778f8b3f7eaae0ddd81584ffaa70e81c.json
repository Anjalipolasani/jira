{"ast":null,"code":"var _jsxFileName = \"/Users/karthikbalaji/Documents/Anjali/SCM/Frontend/src/ReadDefects.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\n// The ReadDefects component is responsible for fetching and displaying defects from the server.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadDefects = () => {\n  _s();\n  // State variable for storing the list of defects.\n  const [defects, setDefects] = useState([]);\n  // State variables for storing the values from the search input fields.\n  const [searchId, setSearchId] = useState('');\n  const [searchAssignedTo, setSearchAssignedTo] = useState('');\n\n  // Add a new state variable for tracking loading status\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to fetch all defects from the server\n  const fetchAllDefects = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/SCM');\n      setDefects(response.data);\n    } catch (error) {\n      console.error('Error fetching all defects:', error);\n    }\n  };\n\n  // Function to fetch a defect by ID from the server\n  const fetchDefectById = async id => {\n    try {\n      const response = await axios.get(`http://localhost:8080/SCM/${id}`);\n      setDefects([response.data]);\n    } catch (error) {\n      console.error(`Error fetching defect by ID: ${id}`, error);\n    }\n  };\n\n  // Function to fetch defects by the assigned person from the server\n  const fetchDefectsByAssignedTo = async assignedTo => {\n    try {\n      // Correcting the URL to match the backend's expected structure for this endpoint\n      const response = await axios.get(`http://localhost:8080/SCM/search/${assignedTo}`);\n      setDefects(response.data);\n    } catch (error) {\n      console.error('Error fetching defects by assigned person:', error);\n    }\n  };\n  // Handler for the \"Search by ID\" form submission.\n  const handleSearchById = e => {\n    e.preventDefault();\n    if (!isLoading && searchId) {\n      // Check if not loading and ID is provided\n      fetchDefectById(searchId);\n    } else if (isLoading) {\n      console.warn(\"Please wait, request is still processing\");\n    } else {\n      console.warn(\"ID is required for searching by ID\");\n    }\n  };\n  // Handler for the \"Search by Assigned To\" form submission.\n  const handleSearchByAssignedTo = e => {\n    e.preventDefault();\n    if (!isLoading && searchAssignedTo) {\n      // Check if not loading and ID is provided\n      fetchDefectsByAssignedTo(searchAssignedTo);\n    } else if (isLoading) {\n      console.warn(\"Please wait, request is still processing\");\n    } else {\n      console.warn(\"Assigned person is required for searching by assigned person\");\n    }\n  };\n  // Handler for the \"Get All Defects\" button click.\n  const handleGetAllDefects = () => {\n    fetchAllDefects();\n  };\n  // Render the UI elements.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Read Defects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetAllDefects,\n      children: \"Get All Defects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchById,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by ID\",\n        value: searchId,\n        onChange: e => setSearchId(e.target.value) // Update searchId state when input changes.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearchByAssignedTo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Assigned To\",\n        value: searchAssignedTo,\n        onChange: e => setSearchAssignedTo(e.target.value) // Update searchAssignedTo state when input changes.\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: defects.map((defect, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", defect.ticketId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Assigned To: \", defect.assignedTo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", defect.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Severity: \", defect.severity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Priority: \", defect.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"PR Link: \", defect.prLink]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Estimated Fix Date: \", defect.estFixDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Build No: \", defect.buildNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fixed Build No: \", defect.fixedBuildNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ReadDefects, \"VJnrgOmXXjNNBbAGnfPZ+cgpbXA=\");\n_c = ReadDefects;\nexport default ReadDefects;\nvar _c;\n$RefreshReg$(_c, \"ReadDefects\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ReadDefects","_s","defects","setDefects","searchId","setSearchId","searchAssignedTo","setSearchAssignedTo","isLoading","setIsLoading","fetchAllDefects","response","get","data","error","console","fetchDefectById","id","fetchDefectsByAssignedTo","assignedTo","handleSearchById","e","preventDefault","warn","handleSearchByAssignedTo","handleGetAllDefects","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","map","defect","index","ticketId","status","severity","priority","prLink","estFixDate","buildNo","fixedBuildNo","_c","$RefreshReg$"],"sources":["/Users/karthikbalaji/Documents/Anjali/SCM/Frontend/src/ReadDefects.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; \n// The ReadDefects component is responsible for fetching and displaying defects from the server.\nconst ReadDefects = () => {\n  // State variable for storing the list of defects.\n  const [defects, setDefects] = useState([]);\n   // State variables for storing the values from the search input fields.\n  const [searchId, setSearchId] = useState('');\n  const [searchAssignedTo, setSearchAssignedTo] = useState('');\n\n    // Add a new state variable for tracking loading status\n    const [isLoading, setIsLoading] = useState(false);\n\n  // Function to fetch all defects from the server\n  const fetchAllDefects = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/SCM');\n      setDefects(response.data);\n    } catch (error) {\n      console.error('Error fetching all defects:', error);\n    }\n  };\n\n  // Function to fetch a defect by ID from the server\n  const fetchDefectById = async (id) => {\n    try {\n      const response = await axios.get(`http://localhost:8080/SCM/${id}`);\n      setDefects([response.data]);\n    } catch (error) {\n      console.error(`Error fetching defect by ID: ${id}`, error);\n    }\n  };\n\n  // Function to fetch defects by the assigned person from the server\n  const fetchDefectsByAssignedTo = async (assignedTo) => {\n    try {\n      // Correcting the URL to match the backend's expected structure for this endpoint\n      const response = await axios.get(`http://localhost:8080/SCM/search/${assignedTo}`);\n      setDefects(response.data);\n    } catch (error) {\n      console.error('Error fetching defects by assigned person:', error);\n    }\n  };\n // Handler for the \"Search by ID\" form submission.\n  const handleSearchById = (e) => {\n    e.preventDefault();\n    if (!isLoading && searchId) { // Check if not loading and ID is provided\n      fetchDefectById(searchId);\n    } else if (isLoading) {\n      console.warn(\"Please wait, request is still processing\");\n    } else {\n      console.warn(\"ID is required for searching by ID\");\n    }\n  };\n// Handler for the \"Search by Assigned To\" form submission.\n    const handleSearchByAssignedTo = (e) => {\n      e.preventDefault();\n      if (!isLoading && searchAssignedTo) { // Check if not loading and ID is provided\n        fetchDefectsByAssignedTo(searchAssignedTo);\n      } else if (isLoading) {\n        console.warn(\"Please wait, request is still processing\");\n      } else {\n        console.warn(\"Assigned person is required for searching by assigned person\");\n      }\n    };\n // Handler for the \"Get All Defects\" button click.\n  const handleGetAllDefects = () => {\n    fetchAllDefects();\n  };\n  // Render the UI elements.\n  return (\n    <div>\n      <h2>Read Defects</h2>\n     {/* Button to trigger fetching all defects. */}\n      <button onClick={handleGetAllDefects}>Get All Defects</button>\n{/* Form for searching defects by ID. */}\n      <form onSubmit={handleSearchById}>\n        <input\n          type=\"text\"\n          placeholder=\"Search by ID\"\n          value={searchId}\n          onChange={(e) => setSearchId(e.target.value)} // Update searchId state when input changes.\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n{/* Form for searching defects by the person they are assigned to. */}\n      <form onSubmit={handleSearchByAssignedTo}>\n        <input\n          type=\"text\"\n          placeholder=\"Search by Assigned To\"\n          value={searchAssignedTo}\n          onChange={(e) => setSearchAssignedTo(e.target.value)} // Update searchAssignedTo state when input changes.\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n{/* Display all fetched defects. */}   \n      <ul>\n        {defects.map((defect, index) => (\n          <li key={index}>\n            <p>ID: {defect.ticketId}</p>\n            <p>Assigned To: {defect.assignedTo}</p>\n            <p>Status: {defect.status}</p>\n            <p>Severity: {defect.severity}</p>\n            <p>Priority: {defect.priority}</p>\n            <p>PR Link: {defect.prLink}</p>\n            <p>Estimated Fix Date: {defect.estFixDate}</p>\n            <p>Build No: {defect.buildNo}</p>\n            <p>Fixed Build No: {defect.fixedBuildNo}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ReadDefects;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}