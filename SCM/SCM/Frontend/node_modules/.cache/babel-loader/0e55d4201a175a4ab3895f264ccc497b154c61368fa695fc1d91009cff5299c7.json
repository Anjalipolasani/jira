{"ast":null,"code":"var _jsxFileName = \"/Users/karthikbalaji/Documents/Anjali/SCM/Frontend/src/DeleteDefect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Importing axios for HTTP requests\n\n// DeleteDefect component allows users to delete a defect by its ID\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteDefect = () => {\n  _s();\n  const [id, setId] = useState(''); // State to store the defect ID\n  const [message, setMessage] = useState(''); // State to store the status message\n\n  // handleDelete function will be called when user clicks the delete button\n  const handleDelete = async () => {\n    // If no ID is entered, display a message and return early\n    if (!id.trim()) {\n      // Checking if the ID is not empty\n      setMessage('Please enter a Defect ID.');\n      return;\n    }\n    try {\n      // Send a DELETE request to the specified URL\n      const response = await axios.delete(`http://localhost:8080/SCM/${id}`);\n\n      // If the request is successful, display a success message\n      if (response.status === 200) {\n        console.log(`Delete request sent for ID: ${id}`);\n        setMessage(`Defect with ID ${id} deleted successfully.`);\n      } else {\n        // If the request is unsuccessful, display an error message\n        setMessage('Error deleting defect. Please try again.');\n      }\n    } catch (error) {\n      console.error('Failed to delete defect:', error);\n\n      // Display specific error messages based on the error type\n      if (error.response && error.response.status === 404) {\n        setMessage('Ticket ID not found.');\n      } else {\n        setMessage('Error deleting defect. Please try again.');\n      }\n    }\n  };\n\n  // Rendering the input field, delete button, and message\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Delete Defect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => setId(e.target.value) // Updating ID in the state when input changes\n      ,\n      placeholder: \"Enter Defect ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Defect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DeleteDefect, \"bUJWpMdajDPxi0P4+cETjaCfoPs=\");\n_c = DeleteDefect;\nexport default DeleteDefect; // Exporting the component for use in other parts of your application\nvar _c;\n$RefreshReg$(_c, \"DeleteDefect\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DeleteDefect","_s","id","setId","message","setMessage","handleDelete","trim","response","delete","status","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/karthikbalaji/Documents/Anjali/SCM/Frontend/src/DeleteDefect.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; // Importing axios for HTTP requests\n\n// DeleteDefect component allows users to delete a defect by its ID\nconst DeleteDefect = () => {\n  const [id, setId] = useState(''); // State to store the defect ID\n  const [message, setMessage] = useState(''); // State to store the status message\n\n  // handleDelete function will be called when user clicks the delete button\n  const handleDelete = async () => {\n    // If no ID is entered, display a message and return early\n    if (!id.trim()) { // Checking if the ID is not empty\n      setMessage('Please enter a Defect ID.');\n      return;\n    }\n\n    try {\n      // Send a DELETE request to the specified URL\n      const response = await axios.delete(`http://localhost:8080/SCM/${id}`);\n\n      // If the request is successful, display a success message\n      if (response.status === 200) {\n        console.log(`Delete request sent for ID: ${id}`);\n        setMessage(`Defect with ID ${id} deleted successfully.`);\n      } else {\n        // If the request is unsuccessful, display an error message\n        setMessage('Error deleting defect. Please try again.');\n      }\n    } catch (error) {\n      console.error('Failed to delete defect:', error);\n\n      // Display specific error messages based on the error type\n      if (error.response && error.response.status === 404) {\n        setMessage('Ticket ID not found.');\n      } else {\n        setMessage('Error deleting defect. Please try again.');\n      }\n    }\n  };\n\n  // Rendering the input field, delete button, and message\n  return (\n    <div>\n      <h2>Delete Defect</h2>\n      <input\n        type=\"text\"\n        value={id}\n        onChange={(e) => setId(e.target.value)} // Updating ID in the state when input changes\n        placeholder=\"Enter Defect ID\"\n      />\n      <button onClick={handleDelete}>Delete Defect</button> \n      {message && <p>{message}</p>} \n    </div>\n  );\n};\n\nexport default DeleteDefect; // Exporting the component for use in other parts of your application\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,IAAI,CAACJ,EAAE,CAACK,IAAI,CAAC,CAAC,EAAE;MAAE;MAChBF,UAAU,CAAC,2BAA2B,CAAC;MACvC;IACF;IAEA,IAAI;MACF;MACA,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,MAAM,CAAE,6BAA4BP,EAAG,EAAC,CAAC;;MAEtE;MACA,IAAIM,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAE,+BAA8BV,EAAG,EAAC,CAAC;QAChDG,UAAU,CAAE,kBAAiBH,EAAG,wBAAuB,CAAC;MAC1D,CAAC,MAAM;QACL;QACAG,UAAU,CAAC,0CAA0C,CAAC;MACxD;IACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;;MAEhD;MACA,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACnDL,UAAU,CAAC,sBAAsB,CAAC;MACpC,CAAC,MAAM;QACLA,UAAU,CAAC,0CAA0C,CAAC;MACxD;IACF;EACF,CAAC;;EAED;EACA,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAElB,EAAG;MACVmB,QAAQ,EAAGC,CAAC,IAAKnB,KAAK,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;MAAA;MACxCI,WAAW,EAAC;IAAiB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFnB,OAAA;MAAQ0B,OAAO,EAAEnB,YAAa;MAAAQ,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDd,OAAO,iBAAIL,OAAA;MAAAe,QAAA,EAAIV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlDID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAoDlB,eAAeA,YAAY,CAAC,CAAC;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}